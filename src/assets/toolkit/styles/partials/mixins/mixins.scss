// sass-lint:disable indentation

// Clearfix
// This mixin adds a empty :after to clear floated elements

@mixin clearfix {
  &:after {
    content: '';
    display: table;
    clear: both;
  }
}

// Keyframes
// This mixin is used when creating keyframes to add a prefixed version as well

@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }

  @keyframes #{$animation-name} {
    @content;
  }
}

// Active Scale
// This mixin adds an :active scale state to any element

@mixin active-scale($value: 0.95, $transform-origin: 50% 50%) {
  @include transform-origin($transform-origin);
  transition: transform 200ms ease;

  &:active {
    @include transform(scale($value));
  }
}

// Transform
// This mixin is used to add prefixes to the transform property

@mixin transform($value...) {
  -webkit-transform: $value;
      -ms-transform: $value;
          transform: $value;
}

// Transform origin
// This mixin is used to add prefixes to the transform-origin property

@mixin transform-origin($value) {
  -webkit-transform-origin: $value;
      -ms-transform-origin: $value;
          transform-origin: $value;
}

// Animation
// This mixin is used to add prefixes to the animation property

@mixin animation($value...) {
  -webkit-animation: $value;
          animation: $value;
}

// Unselectable
// This mixin is used to make the text inside an element unselectable

@mixin unselectable {
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

// User select
// This mixin is used to add prefixes to the user-select property

@mixin user-select($value) {
  -webkit-user-select: $value;
     -moz-user-select: $value;
      -ms-user-select: $value;
          user-select: $value;
}

// Columns
// This mixin is used to add prefixes to the columns property

@mixin columns($value) {
  -webkit-columns: $value;
     -moz-columns: $value;
          columns: $value;
}

// Columns Gap
// This mixin is used to add prefixes to the columns-gap property

@mixin column-gap($value) {
  -webkit-column-gap: $value;
     -moz-column-gap: $value;
          column-gap: $value;
}

// Flexbox
// These mixins are used to add prefixes to flexbox related properties

@mixin flex-display($display: flex) {
  // sass-lint:disable-block no-duplicate-properties
  display: -webkit-#{$display};
  display: -moz-#{$display};
  display: -ms-#{$display}box;
  display: -ms-#{$display};
  display: $display;
}

@mixin flex($columns: initial) {
  -webkit-flex: $columns;
      -ms-flex: $columns;
          flex: $columns;
}

@mixin flex-direction($direction: row) {
  -webkit-flex-direction: $direction;
      -ms-flex-direction: $direction;
          flex-direction: $direction;
}

@mixin flex-wrap($wrap: nowrap) {
  -webkit-flex-wrap: $wrap;
      -ms-flex-wrap: $wrap;
          flex-wrap: $wrap;
}

@mixin flex-flow($flow) {
  -webkit-flex-flow: $flow;
      -ms-flex-flow: $flow;
          flex-flow: $flow;
}

@mixin flex-order($order: 0) {
  -webkit-order: $order;
      -ms-order: $order;
          order: $order;
}

@mixin flex-grow($grow: 0) {
  -webkit-flex-grow: $grow;
      -ms-flex-grow: $grow;
          flex-grow: $grow;
}

@mixin flex-shrink($shrink: 1) {
  -webkit-flex-shrink: $shrink;
      -ms-flex-shrink: $shrink;
          flex-shrink: $shrink;
}

@mixin flex-basis($width: auto) {
  -webkit-flex-basis: $width;
      -ms-flex-basis: $width;
          flex-basis: $width;
}

@mixin justify-content($justify: flex-start) {
  -webkit-justify-content: $justify;
      -ms-justify-content: $justify;
          justify-content: $justify;
}

@mixin align-content($align: stretch) {
  -webkit-align-content: $align;
      -ms-align-content: $align;
          align-content: $align;
}

@mixin align-items($align: stretch) {
  -webkit-align-items: $align;
      -ms-align-items: $align;
          align-items: $align;
}

@mixin align-self($align: auto) {
  -webkit-align-self: $align;
      -ms-align-self: $align;
          align-self: $align;
}
